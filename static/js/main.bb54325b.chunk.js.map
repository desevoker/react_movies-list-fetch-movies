{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","helpers.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAdd","useState","setTitle","setMovie","isLoading","setIsLoading","isError","setIsError","useEffect","query","trim","toLowerCase","fetch","then","res","json","catch","Response","Error","data","isMovieData","Poster","imdbID","Title","Plot","parseMovie","error","console","log","finally","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","setMovies","newMovie","some","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb54325b.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\n\nimport { Movie } from '../../types';\nimport { getMovie } from '../../api';\nimport { isMovieData, parseMovie } from '../../helpers';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    if (isLoading) {\n      getMovie(title.trim().toLowerCase())\n        .then(data => {\n          if (isMovieData(data)) {\n            setMovie(parseMovie(data));\n          } else {\n            setIsError(true);\n          }\n        })\n        .catch((error) => {\n          // eslint-disable-next-line no-console\n          console.log(error);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, [isLoading]);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n\n    if (isError) {\n      setIsError(false);\n    }\n  };\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n  };\n\n  const handleAddMovie = () => {\n    if (movie) {\n      onAdd(movie);\n    }\n\n    setMovie(null);\n    setTitle('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              data-cy=\"titleField\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': isError,\n              })}\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              data-cy=\"searchButton\"\n              className={classNames('button', 'is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!title.trim()}\n            >\n              {!movie ? 'Find a movie' : 'Search again'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                type=\"button\"\n                data-cy=\"addButton\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData, ResponseError } from './types';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=d42ed462';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { Movie, MovieData, ResponseError } from './types';\n\nexport function isMovieData(\n  data: MovieData | ResponseError,\n): data is MovieData {\n  return 'imdbID' in data;\n}\n\nconst noPosterImg = 'https://via.placeholder.com/360x270.png?text=no%20preview';\nconst imdbBaseUrl = 'https://www.imdb.com/title/';\n\nexport function parseMovie(data: MovieData): Movie {\n  const imgUrl = data.Poster !== 'N/A' ? data.Poster : noPosterImg;\n  const imdbUrl = imdbBaseUrl + data.imdbID;\n\n  return {\n    title: data.Title,\n    description: data.Plot,\n    imgUrl,\n    imdbUrl,\n    imdbId: data.imdbID,\n  };\n}\n","import { useState } from 'react';\nimport './App.scss';\n\nimport { Movie } from './types';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    const isDuplicate = movies.some(movie => movie.imdbId === newMovie.imdbId);\n\n    if (!isDuplicate) {\n      setMovies(currentMovies => [...currentMovies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}